# syntax=docker/dockerfile:1

FROM oven/bun:alpine AS base
WORKDIR /app

FROM base AS manifests
COPY package.json bun.lock ./
COPY apps/cms/package.json ./apps/cms/
COPY apps/server/package.json ./apps/server/
COPY apps/client/package.json ./apps/client/

FROM base AS final
ARG MIGRATION_TARGET
COPY --from=manifests /app .

COPY ./apps/cms ./apps/cms
COPY ./apps/server ./apps/server
COPY tsconfig.json reset.d.ts ./

RUN apk update && apk add --no-cache python3 nodejs

RUN --mount=type=cache,target=/root/.bun/install/cache <<EOF
    set -e
    case "$MIGRATION_TARGET" in
      "cms")
        echo "1/3: Installing dependencies for 'cms'"
        bun install --frozen-lockfile --filter=cms
        ;;
      "server")
        echo "1/3: Installing dependencies for 'server'"
        bun install --frozen-lockfile --filter=server
        ;;
      *)
        echo "1/3: Installing dependencies for 'cms' & 'server'"
        bun install --frozen-lockfile --filter=cms --filter=server
        ;;
    esac
EOF

ENV MIGRATION_TARGET=${MIGRATION_TARGET}

COPY ./scripts/migrations-entrypoint.sh /usr/local/bin/migrations-entrypoint.sh
RUN chmod +x /usr/local/bin/migrations-entrypoint.sh

ENTRYPOINT ["/usr/local/bin/migrations-entrypoint.sh"]
